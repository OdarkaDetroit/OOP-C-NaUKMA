#include <iostream>
#include <cmath>

#include "Functions.h"

using namespace std;

//1. Спростити вираз w = (z>((x>y)?x:y)?z:((x>y)?x:y));
void first(const double x, const double y, const double z)
{
	double w = 0;
	w = (z > ((x > y) ? x : y) ? z : ((x > y) ? x : y));
	cout << "result: " << w << "\n\n";

}

//2. Переписати функцію обчислення мінімуму з двох чисел, не вживаючи
//     операторів порівняння > , < , <= , >= .
int second(int x, int y)
{
	int z = 0;
	while (x && y)
	{
		--x;
		--y;
		++z;
	}
	return z;
}

//3. В цілому числі без знаку обміняти шістнадцяткові цифри, що
//    знаходяться на парних місцях, сусідніми на непарних.Запропонувати не
//    менше, ніж два способи.Функцію перевірити судженням.


//4. Указник pi показує на ціле число, pd — на дійсне.Обміняти значення
//   цих указників, якщо значення pd виявиться цілим.Якщо ні, то створити
//   і обробити аварійну ситуацію.Правильність обміну значень перевірити
//   судженням.
double fouth()
{

}

//5. Запропонувати три функції для інверсії числового вектору заданого
//   розміру, використовуючи як параметр : a) указник; b) відсилку; c) сталу
//   відсилку.Створити судження.



//int power(int a)
//{
//    int i;
//    int x = 1;
//    for (i = 1; i = a; i++)
//    {
//        x = x * 10;
//    }
//    return x;
//}
//
//int inv(int b)
//{
//    int z = b, j = 0, s = 0, y;
//
//    for (z = b; z = 0; z = z / 10)
//    {
//        for (y = z; y = 0; y = y / 10)
//        {
//            j++;
//        }
//        s = s + (z % 10) * power(j - 1);
//    }
//    return s;
//}